name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} - {{ matrix.python }} - {{ matrix.bitness }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

        # Used to host cibuildwheel
      - uses: actions/setup-python@v2

        # Visual Studio
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.10.0

      - name: Build wheels
        # to supply options, put them in 'env', like:
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014

          CIBW_SKIP: pp* cp27-* cp35-*

          CIBW_ARCHS_MACOS: "auto"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_WINDOWS: "AMD64"

          CIBW_BEFORE_ALL_LINUX: |
            git submodule update --init --recursive
            yum install -y gcc-c++ ninja-build pcre-devel
            if [[ ! -e $(command -v swig) ]]; then
              curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.2/swig-4.0.2.tar.gz/download --output /tmp/swig.tar.gz
              mkdir /tmp/swig
              tar -xvzf /tmp/swig.tar.gz -C /tmp/swig --strip-components 1 &> /dev/null
              pushd /tmp/swig
              ./configure --without-alllang --with-python3 && make -j2 && make install > /dev/null
              popd
            fi

          CIBW_BEFORE_ALL_WINDOWS: choco install swig ninja cmake -f -y && git submodule update --init --recursive

          CIBW_BEFORE_ALL_MACOS: |
            git submodule update --init --recursive
            brew install swig ninja cmake

        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
